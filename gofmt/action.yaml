# Copyright 2022 Chainguard, Inc.
# SPDX-License-Identifier: Apache-2.0

name: 'gofmt'
description: |
  This action runs gofmt over the working tree and then verifies
  that there are no differences from running the tool.

inputs:
  args:
    description: |
      The arguments to pass to gofmt
    required: false
  working-directory:
    description: |
      The working directory to run goimports
    default: "."
  dirs:
    description: |
      Space separated list of dirs to search for go modules. Defaults to current directory.
    default: "."

runs:
  using: "composite"
  steps:
  - name: gofmt ${{ inputs.args }}
    shell: bash
    working-directory: ${{ inputs.working-directory }}
    env:
      DIRS: ${{ inputs.dirs }}
    run: |
      set -xv

      for subdir in ${DIRS}; do
        echo "::subdir:: $subdir"
        pushd $subdir

        # We limit the depth to 3 mostly to avoid go.mod files that get pulled into `third_party` like some hashicorp repos.
        for dir in $(find . -type d \( -path "*/third_party" -o -path "*/.terraform" \) -prune -o -name go.mod -exec dirname {} \;| sort ); do
          echo "::group:: $dir"
          pushd $dir
          gofmt ${{ inputs.args }} -w \
            $(find . \
            -path './vendor' -prune \
            -o -path '*/third_party' -prune \
            -o -name '*.pb.go' -prune \
            -o -name '*.pb.gw.go' -prune \
            -o -name 'wire_gen.go' -prune \
            -o -type f -name '*.go' -print)
          popd
          echo ::endgroup::
        done

        popd
        echo ::endsubdir::
      done

  - name: Verify gofmt
    uses: chainguard-dev/actions/nodiff@main
    with:
      fixup-command: "gofmt ${{ inputs.args }}"
