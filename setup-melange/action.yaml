# Copyright 2022 Chainguard, Inc.
# SPDX-License-Identifier: Apache-2.0

name: 'Setup melange'
description: |
  Sets up melange, so it can run in an Ubuntu environment.

runs:
  using: 'composite'

  steps:
    # FIXME(kaniini): Switch to qemu-user-static when apko 0.5/melange 0.2 is released.
    - name: 'Update package repository indexes'
      shell: bash
      run: |
        sudo apt update
    - name: 'Install qemu emulator binaries'
      shell: bash
      run: |
        sudo apt install -y qemu-user
    - name: 'Fetch apk-tools nightly'
      shell: bash
      run: |
        sudo apt install -y unzip
        wget -O apk-tools-nightly.zip 'https://gitlab.alpinelinux.org/alpine/apk-tools/-/jobs/artifacts/2.12-stable/download?job=build-static:+[x86_64]'
        unzip apk-tools-nightly.zip 'src/apk.static-x86_64'
        sudo mv 'src/apk.static-x86_64' /sbin/apk
        rm -rf src apk-tools-nightly.zip
    - name: 'Set up apk-tools in overlay mode'
      shell: bash
      run: |
        sudo apk add --initdb --root=/
        (cat <<_EOF_
        https://dl-cdn.alpinelinux.org/alpine/edge/main
        _EOF_
        ) | sudo tee /etc/apk/repositories
    - name: 'Fetch and install alpine keyring'
      shell: bash
      run: |
        sudo apk update --allow-untrusted
        sudo apk add --allow-untrusted alpine-keys
    - uses: actions/setup-go@d0a58c1c4d2b25278816e339b944508c875f3613 # v3.4.0
      with:
        go-version: '1.20'
        check-latest: true
    - name: 'Install dependencies'
      shell: bash
      run: |
        sudo apt install -y build-essential git
    # TODO: the bubblewrap package available from "apt install"
    # is outdated and missing newer features such as --clearenv flag,
    # so instead we download the wolfi .apk and use the binary in there
    - name: 'Install dependencies (bubblewrap)'
      shell: bash
      run: |
        sudo apt install -y libcap-dev meson ninja-build
        git clone https://github.com/containers/bubblewrap
        pushd bubblewrap
        meson --prefix=/usr -Drequire_userns=true . output
        cd output
        ninja
        sudo ninja install
        popd
        rm -rf bubblewrap
    - name: 'Install melange'
      shell: bash
      run: |
        TMP_CLONE_DIR="$(mktemp -d)"
        git clone https://github.com/chainguard-dev/melange "${TMP_CLONE_DIR}"
        pushd "${TMP_CLONE_DIR}"
        make melange
        sudo env "PATH=$PATH" make install
        melange version
        popd
        rm -rf "${TMP_CLONE_DIR}"
