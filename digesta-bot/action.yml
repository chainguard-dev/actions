name: 'Update the image digest'
description: 'Update the image digest when have a mutating tag'

inputs:
  token:
    description: 'GITHUB_TOKEN or a `repo` scoped Personal Access Token (PAT)'
    required: true
    default: ${{ github.token }}

outputs:
  pull_request_number:
    description: "Pull Request Number"
    value: ${{ steps.pull_request.outputs.pull-request-number }}

runs:
  using: "composite"
  steps:
    - uses: imjasonh/setup-crane@00c9e93efa4e1138c9a7a5c594acd6c75a2fbf0c # v0.3

    - shell: bash
      run: |
        while IFS= read -r -d '' file; do
          if [[ "$file" == *testdata* ]]; then
            echo "Skipping testdata ${file}"
            continue
          fi
          images=$(grep -i -E '[a-z0-9]+([._-][a-z0-9]+)*(/[a-z0-9]+([._-][a-z0-9]+)*)*@sha256:[a-z0-9]+' "$file" | cut -d @ -f1 | rev | cut -d = -f1 | cut -d ' ' -f1 | cut -d '"' -f1 | rev | sed -e "s/^docker:\/\///" | tr '\n' ',' || true)
          digests=$(grep -i -E '[a-z0-9]+([._-][a-z0-9]+)*(/[a-z0-9]+([._-][a-z0-9]+)*)*@sha256:[a-z0-9]+' "$file" | cut -d @ -f2 | cut -d ' ' -f1 | cut -d '"' -f1 | tr '\n' ',' || true)
          IFS=',' read -r -a images2 <<< "$images"
          IFS=',' read -r -a digests2 <<< "$digests"

          if [ -n "$images" ]; then
              for i in "${!images2[@]}"; do
                if [[ ${images2[i]} != *":"* ]]; then
                  echo "Image ${images2[i]} in file $file does not have a tag, ignoring..."
                  continue
                fi
                if [[ ${images2[i]} == *\.local:* ]]; then
                  echo "Skipping local registry image ${images2[i]}"
                  continue
                fi
                echo "Processing ${images2[i]} in file $file"
                updated_digest=$(crane digest "${images2[i]}")
                if [ "$updated_digest" != "${digests2[i]}" ] && [ -n "$updated_digest" ]; then
                  echo "Digest ${digests2[i]} for image ${images2[i]} is different, new digest is $updated_digest, updating..."
                  sed -i -e "s/${digests2[i]}/$updated_digest/g" "$file"
                fi
              done
          fi
        done < <(find "$(pwd)" -type f \( -name "*.yaml" -o -name "*.yml" -o -name "Dockerfile*" \) -print0)

    - name: Check workspace
      id: create_pr
      shell: bash
      run: |
        if [[ $(git diff --stat) != '' ]]; then
          echo "create_pr=true" >> $GITHUB_OUTPUT
        fi

    # Configure signed commits
    - uses: chainguard-dev/actions/setup-gitsign@main

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@5b4a9f6a9e2af26e5f02351490b90d01eb8ec1e5 # v5.0.0
      if: ${{ steps.create_pr.outputs.create_pr == 'true' }}
      id: pull_request
      with:
        token: ${{ inputs.token }}
        commit-message: update index
        title: 'Update images digests'
        body: |
          Update images digests

          ```release-note
          NONE
          ```
        labels: automated pr, kind/cleanup, release-note-none
        branch: update-digests
        delete-branch: true
