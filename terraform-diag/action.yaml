# Copyright 2022 Chainguard, Inc.
# SPDX-License-Identifier: Apache-2.0

name: 'Extract Terraform Diagnostics'
description: |
  This action extracts terraform diagnostics from the
  structured JSON output of a terraform apply.

inputs:
  json-file:
    description: |
      The path to the JSON output of a terraform apply
    required: true

outputs:
  errors:
    description: |
      A markdown summary of the errors contained within the terraform output.
    value: ${{ steps.extract-errors.outputs.errors }}

runs:
  using: "composite"
  steps:
    - name: Extract Warnings
      shell: bash
      run: |
        jq -r 'select(.["@level"]=="warn") | ("::group::" + .diagnostic.address + ": " + .diagnostic.summary + "\n" + .diagnostic.detail + "\n::endgroup::")' '${{ inputs.json-file }}' || true
        # We don't surface warnings via ::warning:: because the way we handle signing presubmit would make this to noisy.

    - name: Extract Errors
      id: extract-errors
      shell: bash
      run: |
        jq -r 'select(.["@level"]=="error") | ("::group::" + .diagnostic.address + ": " + .diagnostic.summary + "\n" + .diagnostic.detail + "\n::endgroup::")' '${{ inputs.json-file }}' || true
        jq -r 'select(.["@level"]=="error") | ("::error file=" + .diagnostic.range.filename + ",line=" + (.diagnostic.range.start.line | tostring) + ",endLine=" + (.diagnostic.range.end.line | tostring) + ",title=" + .diagnostic.summary + "::" + .diagnostic.address)' '${{ inputs.json-file }}' || true

        export MARKDOWN="$(jq -r 'select(.["@level"]=="error") | "`" + .diagnostic.address + "`: " + .diagnostic.summary + "\n"' '${{ inputs.json-file }}')"

        echo "${MARKDOWN}"

        cat >> "${GITHUB_OUTPUT}" <<EOOUTPUT
        errors<<EOERRORS
        ${MARKDOWN}
        EOERRORS
        EOOUTPUT
