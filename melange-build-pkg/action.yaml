# Copyright 2022 Chainguard, Inc.
# SPDX-License-Identifier: Apache-2.0

name: 'Build single package with Melange'
description: |
  This action generates a package using Melange.  It assumes that
  the Melange repository is already configured.

inputs:
  config:
    description: |
      The config file to use for building the package.
    default: .melange.yaml

  multi-config:
    description: |
      Comma-separated list of config files to use for building package(s).
    default: ''

  archs:
    description: |
      The architectures to use.
    default: x86_64

  sign-with-key:
    description: |
      Sign packages with a key, useful for multi-stage
      pipelines.
    default: false

  signing-key-path:
    description: |
      The path for the temporary key if signing is enabled.
    default: ${{ github.workspace }}/melange.rsa

  repository-path:
    description: |
      The path of the repository being constructed by Melange.
    default: ${{ github.workspace }}/packages

  repository-append:
    description: |
      A list of paths or URIs of repositories that should be
      implicitly included in the build environment.
    default: ''

  keyring-append:
    description: |
      A list of paths or URIs of keys that should be included
      in the build environment.
    default: ''

  workspace-dir:
    description: |
      The directory to use as the workspace.
    default: ''

  namespace:
    description: |
      Namespace string to use in SBOM purls identifying built packages (eg wolfi, alpine)
    default: ''

  update-index:
    description: |
      Automatically update index when the package is built.
    default: true

  empty-workspace:
    description: |
      Whether to use an empty workspace or not.
    default: false

  source-dir:
    description: |
      The source directory to use if empty-workspace is false.
    default: ${{ github.workspace }}

  workdir:
    description: |
      Switch to this directory prior to running build
    default: ''

  cache-dir:
    description: |
      Directory used for cached inputs
    default: ''

  pipeline-dir:
    description: |
      Directory used for pipelines
    default: ''

runs:
  using: 'composite'

  steps:
    - if: inputs.template != ''
      shell: bash
      run: |
        echo "Warning: the --template flag has been removed from melange and will be ignored."
    - name: 'Build package with Melange'
      shell: bash
      run: |
        [ -n '${{ inputs.workdir }}' ] && cd "${{ inputs.workdir }}"
        [ -n '${{ inputs.repository-append }}' ] && repoarg="--repository-append ${{ inputs.repository-append }}"
        [ -n '${{ inputs.keyring-append }}' ] && keyringarg="--keyring-append ${{ inputs.keyring-append }}"
        [ -n '${{ inputs.workspace-dir }}' ] && workspacearg="--workspace-dir ${{ inputs.workspace-dir }}"
        [ -n '${{ inputs.namespace }}' ] && nsarg="--namespace ${{ inputs.namespace }}"
        [ -n '${{ inputs.cache-dir }}' ] && cachearg="--cache-dir=${{ inputs.cache-dir }}"
        [ -n '${{ inputs.pipeline-dir }}' ] && pipelinedirarg="--pipeline-dir=${{ inputs.pipeline-dir }}"
        ${{ inputs.empty-workspace }} && workspacearg="$workspacearg --empty-workspace"
        ${{ inputs.empty-workspace }} || workspacearg="$workspacearg --source-dir ${{ inputs.source-dir }}/${{ inputs.workdir }}"
        ${{ inputs.sign-with-key }} && signarg="--signing-key ${{ inputs.signing-key-path }}"
        ${{ inputs.update-index }} || indexarg="--generate-index=false"
        melangeconfigs="${{ inputs.multi-config }}"
        [[ "${melangeconfigs}" != "" ]] || melangeconfigs="${{ inputs.config }}"
        for config in ${melangeconfigs//,/ }; do
          # If we have already built one melange package, and the packages/ dir exists,
          # add this as an additional local repository that other packages can depend on
          if [[ -d "${{ inputs.repository-path }}" ]]; then
            repoarg="${repoarg} --repository-append ${{ inputs.repository-path }}"
            keyringarg="${keyringarg} --keyring-append ${{ inputs.signing-key-path }}.pub"
          fi
          sudo melange build $config --arch ${{ inputs.archs }} --out-dir ${{ inputs.repository-path }} $signarg $repoarg $keyringarg $workspacearg $indexarg $nsarg $cachearg $pipelinedirarg
        done
    - name: 'Fix local repository permissions'
      shell: bash
      run: |
        sudo chown -R runner:runner ${{ inputs.repository-path }}
