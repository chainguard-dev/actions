# Copyright 2022 Chainguard, Inc.
# SPDX-License-Identifier: Apache-2.0

name: 'Setup Knative Eventing'
description: |
  This action sets up Knative Eventing on the current
  kubectl context (typically KinD from setup-kind).

inputs:
  version:
    description: |
      The version of Knative to install, e.g. 1.11.0
    required: false
    default: 1.11.0

runs:
  using: "composite"

  steps:
    - name: Install Knative
      id: knative
      shell: bash
      run: |
        # Eliminates the resources blocks in a release yaml
        function resource_blaster() {
          local FILE="${1}"

          curl -L -s "https://github.com/knative/eventing/releases/download/knative-v${{ inputs.version }}/${FILE}" \
            | yq e 'del(.spec.template.spec.containers[]?.resources)' - \
            `# Filter out empty objects that come out as {} b/c kubectl barfs` \
            | grep -v '^{}$'
        }

        resource_blaster eventing-crds.yaml | kubectl apply -f -
        resource_blaster eventing-core.yaml | kubectl apply -f -
        resource_blaster in-memory-channel.yaml | kubectl apply -f -
        resource_blaster mt-channel-broker.yaml | kubectl apply -f -

        cat | kubectl apply -f - <<EOF
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: imc-channel
          namespace: knative-eventing
        data:
          channelTemplateSpec: |
            apiVersion: messaging.knative.dev/v1
            kind: InMemoryChannel
        ---
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: config-br-defaults
          namespace: knative-eventing
        data:
          default-br-config: |
            # This is the cluster-wide default broker channel.
            clusterDefault:
              brokerClass: MTChannelBasedBroker
              apiVersion: v1
              kind: ConfigMap
              name: imc-channel
              namespace: knative-eventing
        EOF

        # Wait for Knative to be ready (or webhook will reject services)
        for x in $(kubectl get deploy --namespace knative-eventing -oname); do
          kubectl rollout status --timeout 5m --namespace knative-eventing $x
        done

