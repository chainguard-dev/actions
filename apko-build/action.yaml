# Copyright 2022 Chainguard, Inc.
# SPDX-License-Identifier: Apache-2.0

name: 'Build image with apko'
description: |
  This action build an OCI image with apko, given a config file
  and tag to use.

inputs:
  config:
    description: |
      The config file to use for building the image.
    default: .apko.yaml

  tag:
    description: |
      The tag to use for publishing the image.
    required: true

  repository_owner:
    description: |
      The repository owner's GitHub username.
    default: ${{ github.repository_owner }}

  token:
    description: |
      The repository owner's GitHub token.
    default: ${{ github.token }}

  image_refs:
    description: |
      The value to pass to --image-refs.
    default: /tmp/apko.images

  keyring-append:
    description: |
      The value to pass to --keyring-append.
    default: ''

  archs:
    description: |
      The architectures to build for.
    default: ''

  source-date-epoch:
    description: |
      The UNIX timestamp to use as the source date when building an image.
      This is set as the SOURCE_DATE_EPOCH environment variable.
    default: ''

  use-docker-mediatypes:
    description: |
      Use Docker mediatypes for building the image.
    type: boolean
    required: false

outputs:
  digest:
    description: |
      The digest of the published container image.


runs:
  using: docker
  image: "docker://ghcr.io/wolfi-dev/apko:latest"
  env:
    # Set up go-containerregistry's GitHub keychain.
    GITHUB_ACTOR: ${{ inputs.repository_owner }}
    GITHUB_TOKEN: ${{ inputs.token }}
  entrypoint: /bin/sh
  args:
    - '-c'
    - |
      set -o errexit

      echo "***************************************************************************************"
      echo "This action will be deprecated, please use distroless/actions/apko-publish@main instead"
      echo "***************************************************************************************"

      [ -n "${{ inputs.source-date-epoch }}" ] && export SOURCE_DATE_EPOCH='${{ inputs.source-date-epoch }}'
      [ -n "${{ inputs.keyring-append }}" ] && keys="-k ${{ inputs.keyring-append }}"
      [ -n "${{ inputs.archs }}" ] && archs="--arch ${{ inputs.archs }}"
      /usr/bin/apko publish \
        ${{ inputs.use-docker-mediatypes && '--use-docker-mediatypes' }} \
        --image-refs="${{ inputs.image_refs }}" ${{ inputs.config }} ${{ inputs.tag }} $keys $archs
      echo EXIT CODE: $?
      echo "digest=$(cat "${{ inputs.image_refs }}")" >> $GITHUB_OUTPUT
