# Copyright 2022 Chainguard, Inc.
# SPDX-License-Identifier: Apache-2.0

name: 'EOF Newline'
description: |
  This action flags files that are missing newlines at EOF.

inputs:
  path:
    description: |
      The path where the git repository resides.
    required: true
    default: ""
  reviewdog_version:
    description: |
      The version of reviewdog to use.
    required: false
    default: "v0.18.1"

runs:
  using: "composite"
  steps:
  - uses: reviewdog/action-setup@8f2ec89e6b467ca9175527d2a1641bbd0c05783b # v1.0.3
    with:
      reviewdog_version: ${{ inputs.reviewdog_version }}

  - name: EOF newline
    shell: bash
    env:
      REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
    run: |
      set -e
      pushd "${GITHUB_WORKSPACE}/${{ inputs.path }}" || exit 1
      git status

      echo '::group:: Flagging missing EOF newlines with reviewdog üê∂ ...'
      # Don't fail because of misspell
      set +o pipefail
      # Lint exclude rule:
      #  - nothing in vendor/
      #  - nothing in third_party
      #  - nothing in .git/
      #  - no *.ai (Adobe Illustrator) files.
      #  - no *.svg (vector) files.
      #  - no /testdata/ files.
      LINT_FILES=$(git ls-files |
      git check-attr --stdin linguist-generated | grep -Ev ': (set|true)$' | cut -d: -f1 |
      git check-attr --stdin linguist-vendored | grep -Ev ': (set|true)$' | cut -d: -f1 |
      git check-attr --stdin ignore-lint | grep -Ev ': (set|true)$' | cut -d: -f1 |
      grep -Ev '^(vendor/|third_party/|LICENSES/|.git)' |
      grep -v '\.ai$' |
      grep -v '\.svg$' |
      grep -v '/testdata/')

      for x in $LINT_FILES; do
        # Based on https://stackoverflow.com/questions/34943632/linux-check-if-there-is-an-empty-line-at-the-end-of-a-file
        if [[ -f $x && ! ( -s "$x" && -z "$(tail -c 1 $x)" ) ]]; then
          # We add 1 to `wc -l` here because of this limitation (from the man page):
          # Characters beyond the final <newline> character will not be included in the line count.
          echo $x:$((1 + $(wc -l $x | tr -s ' ' | cut -d' ' -f 1))): Missing newline
        fi
      done | tee /dev/stderr |
      reviewdog -efm="%f:%l: %m" \
            -name="EOF Newline" \
            -reporter="github-pr-check" \
            -filter-mode="added" \
            -fail-on-error="true" \
            -level="error"
      echo '::endgroup::'
      popd
