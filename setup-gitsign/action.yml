name: "Setup gitsign"
description: "Install and configure gitsign"
branding:
  icon: edit-3
  color: green
runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        shopt -s expand_aliases
        if [ -z "$NO_COLOR" ]; then
          alias log_info="echo -e \"\033[1;32mINFO\033[0m:\""
          alias log_error="echo -e \"\033[1;31mERROR\033[0m:\""
        else
          alias log_info="echo \"INFO:\""
          alias log_error="echo \"ERROR:\""
        fi
        set -e

        mkdir -p $HOME/.gitsign

        shaprog() {
          case ${{ runner.os }} in
            Linux)
              sha256sum $1 | cut -d' ' -f1
              ;;
            macOS)
              shasum -a256 $1 | cut -d' ' -f1
              ;;
            Windows)
              powershell -command "(Get-FileHash $1 -Algorithm SHA256 | Select-Object -ExpandProperty Hash).ToLower()"
              ;;
            *)
              log_error "unsupported OS ${{ runner.os }}"
              exit 1
              ;;
          esac
        }

        gitsign_version='0.10.2'
        gitsign_linux_amd64_sha='f9dfe821d0456f11de444de4d90ccd64d7797b5992161f3318b9bf85871c8f78'
        gitsign_linux_arm64_sha='f65cca3498038e76f089ec473f9bdce83bf7e2aa15bbdc147b5b222aa0287ceb'
        gitsign_darwin_amd64_sha='5efdf5541d3698f32b60bdfc3f9dfca8d3bff5960b69b95081b72e88c23cc02f'
        gitsign_darwin_arm64_sha='e8f31efc33c74484f56e2ee8cc889fe4eafd66da150ab53e2438b03c4be548a4'
        gitsign_windows_amd64_sha='c14f4cd67becb7e6937a1a8c363c88468cabaae959401b80e5340ad6fde5cbcc'
        gitsign_windows_arm64_sha='b86113bb9a14a4446bb0758cd35d9708907ff2037e816ec838f2caf75c3d342c'
        gitsign_executable_name=gitsign

        trap "popd >/dev/null" EXIT

        pushd $HOME/.gitsign > /dev/null

        case "${{ runner.os }}-${{ runner.arch }}" in
          Linux-X64)
            gitsign_filename=gitsign_${gitsign_version}_linux_amd64
            gitsign_sha=${gitsign_linux_amd64_sha}
            ;;

          Linux-ARM64)
            gitsign_filename=gitsign_${gitsign_version}_linux_arm64
            gitsign_sha=${gitsign_linux_arm64_sha}
            ;;

          macOS-X64)
            gitsign_filename=gitsign_${gitsign_version}_darwin_amd64
            gitsign_sha=${gitsign_darwin_amd64_sha}
            ;;

          macOS-ARM64)
            gitsign_filename=gitsign_${gitsign_version}_darwin_arm64
            gitsign_sha=${gitsign_darwin_arm64_sha}
            ;;

          Windows-X64)
            gitsign_filename=gitsign_${gitsign_version}_windows_amd64.exe
            gitsign_sha=${gitsign_windows_amd64_sha}
            gitsign_executable_name=gitsign.exe
            ;;

          Windows-ARM64)
            gitsign_filename=gitsign_${gitsign_version}_windows_arm64.exe
            gitsign_sha=${gitsign_darwin_arm64_sha}
            gitsign_executable_name=gitsign.exe
            ;;

          *)
            log_error "unsupported architecture ${{ runner.arch }}"
            exit 1
            ;;
        esac

        expected_gitsign_version_digest=${gitsign_sha}
        log_info "Downloading gitsign version 'v${gitsign_version}' from https://github.com/sigstore/gitsign/releases/download/v${gitsign_version}/${gitsign_filename}"
        curl -sL https://github.com/sigstore/gitsign/releases/download/v${gitsign_version}/${gitsign_filename} -o ${gitsign_executable_name}
        shaDownloaded=$(shaprog ${gitsign_executable_name});
        if [[ ${shaDownloaded} != ${expected_gitsign_version_digest} ]]; then
          log_error "Unable to validate gitsign version: 'v${gitsign_version}': want ${expected_gitsign_version_digest}, got ${shaDownloaded}"
          exit 1
        fi
        chmod +x ${gitsign_executable_name}

        # Configure
        git config --global commit.gpgsign true       # Sign all commits
        git config --global gpg.x509.program gitsign  # Use gitsign for signing
        git config --global gpg.format x509           # gitsign expects x509 args

        # Use workflow name as the username
        git config --global user.name "${{ github.workflow }}"
        # This email identifies the commit as GitHub Actions - see https://github.com/orgs/community/discussions/26560
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

    - if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
      run: echo "$HOME/.gitsign" >> $GITHUB_PATH
      shell: bash

    - if: ${{ runner.os == 'Windows' }}
      run: echo "$HOME/.gitsign" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      shell: pwsh
