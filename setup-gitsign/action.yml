name: "Setup gitsign"
description: "Install and configure gitsign"
branding:
  icon: edit-3
  color: green
runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        #!/bin/bash
        shopt -s expand_aliases
        if [ -z "$NO_COLOR" ]; then
          alias log_info="echo -e \"\033[1;32mINFO\033[0m:\""
          alias log_error="echo -e \"\033[1;31mERROR\033[0m:\""
        else
          alias log_info="echo \"INFO:\""
          alias log_error="echo \"ERROR:\""
        fi
        set -e

        mkdir -p $HOME/.gitsign

        shaprog() {
          case ${{ runner.os }} in
            Linux)
              sha256sum $1 | cut -d' ' -f1
              ;;
            macOS)
              shasum -a256 $1 | cut -d' ' -f1
              ;;
            Windows)
              powershell -command "(Get-FileHash $1 -Algorithm SHA256 | Select-Object -ExpandProperty Hash).ToLower()"
              ;;
            *)
              log_error "unsupported OS ${{ runner.os }}"
              exit 1
              ;;
          esac
        }

        gitsign_version='0.4.1'
        gitsign_linux_amd64_sha='0c6beed574718e7d0ced0eb39aa38a119ff31707297141272f7f5cb1ebee57e6'
        gitsign_linux_arm64_sha='37aa1c2fedcd13b781bf90d8a0d62d5927c7199ce5339b0cd46305efc6fa6ad3'
        gitsign_darwin_amd64_sha='d1773377fc72fcd83eadba7f3a4e5450354a573273e87d02860e92b97a732289'
        gitsign_darwin_arm64_sha='3c487f918563a29b5bcd802de7c7f4f65ec627845534dc814ebf9da0b8e62737'
        gitsign_windows_amd64_sha='381f8a30d929b25f1dd0e82158c7d321710de048c95528c324c7698554312ee0'
        gitsign_windows_arm64_sha='e59945422d006dd0fa4037bc4c139401c9dc504b31d076d8dbb5398921cdc063'
        gitsign_executable_name=gitsign

        trap "popd >/dev/null" EXIT

        pushd $HOME/.gitsign > /dev/null

        case ${{ runner.os }} in
          Linux)
            case ${{ runner.arch }} in
              X64)
                gitsign_filename=gitsign_${gitsign_version}_linux_amd64
                gitsign_sha=${gitsign_linux_amd64_sha}
                ;;

              ARM64)
                gitsign_filename=gitsign_${gitsign_version}_linux_arm64
                gitsign_sha=${gitsign_linux_arm64_sha}
                ;;

              *)
                log_error "unsupported architecture $arch"
                exit 1
                ;;
            esac
            ;;

          macOS)
            case ${{ runner.arch }} in
              X64)
                gitsign_filename=gitsign_${gitsign_version}_darwin_amd64
                gitsign_sha=${gitsign_darwin_amd64_sha}
                ;;

              ARM64)
                gitsign_filename=gitsign_${gitsign_version}_darwin_amd64
                gitsign_sha=${gitsign_darwin_arm64_sha}
                ;;

              *)
                log_error "unsupported architecture $arch"
                exit 1
                ;;
            esac
            ;;

          Windows)
            case ${{ runner.arch }} in
              X64)
                gitsign_filename=gitsign_${gitsign_version}_windows_amd64.exe
                gitsign_sha=${gitsign_windows_amd64_sha}
                gitsign_executable_name=gitsign.exe
                ;;

                ARM64)
                gitsign_filename=gitsign_${gitsign_version}_windows_arm64.exe
                gitsign_sha=${gitsign_darwin_arm64_sha}
                gitsign_executable_name=gitsign.exe
                ;;

              *)
                log_error "unsupported architecture $arch"
                exit 1
                ;;
            esac
            ;;
          *)
            log_error "unsupported architecture $arch"
            exit 1
            ;;
        esac

        expected_gitsign_version_digest=${gitsign_sha}
        log_info "Downloading gitsign version 'v${gitsign_version}' from https://github.com/sigstore/gitsign/releases/download/v${gitsign_version}/${gitsign_filename}"
        curl -sL https://github.com/sigstore/gitsign/releases/download/v${gitsign_version}/${gitsign_filename} -o ${gitsign_executable_name}
        shaDownloaded=$(shaprog ${gitsign_executable_name});
        if [[ ${shaDownloaded} != ${expected_gitsign_version_digest} ]]; then
          log_error "Unable to validate gitsign version: 'v${gitsign_version}': want ${expected_gitsign_version_digest}, got ${shaDownloaded}"
          exit 1
        fi
        chmod +x ${gitsign_executable_name}

        # Configure
        git config --global commit.gpgsign true       # Sign all commits
        git config --global gpg.x509.program gitsign  # Use gitsign for signing
        git config --global gpg.format x509           # gitsign expects x509 args

    - if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
      run:  echo "$HOME/.gitsign" >> $GITHUB_PATH
      shell: bash
    - if: ${{ runner.os == 'Windows' }}
      run:  echo "$HOME/.gitsign" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      shell: pwsh
