name: test-argo-workflows

on:
  pull_request:
    paths:
      - 'setup-argo-workflows/**'
      - '.github/workflows/test-argo-workflows.yaml'

permissions: {}

jobs:
  test_argo_workflows_action:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: read

    name: Install Argo Workflows and test presence in path
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Install Kind
        uses: chainguard-dev/actions/setup-kind@1b32103f5aa389c31ab0be75a8edc38d7e4750d8 # v1.5.7

      - name: Install Argo Workflows
        uses: ./setup-argo-workflows

      - name: Check install!
        run: argo lint --help

  test_argo_cli_only:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: read

    name: Install Argo CLI only and test presence in path
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Install Argo Workflows
        uses: ./setup-argo-workflows
        with:
          install-argo-cli-only: 'true'

      - name: Check install!
        run: argo lint --help
