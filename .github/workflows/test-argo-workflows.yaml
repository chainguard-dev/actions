name: test-argo-workflows

on:
  pull_request:
    paths:
      - 'setup-argo-workflows/**'
      - '.github/workflows/test-argo-workflows.yaml'

permissions: {}

jobs:
  test_argo_workflows_action:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: read

    name: Install Argo Workflows and test presence in path
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install Kind
        uses: chainguard-dev/actions/setup-kind@0cda751b114eb55c388e88f7479292668165602a # v1.0.2

      - name: Install Argo Workflows
        uses: ./setup-argo-workflows

      - name: Check install!
        run: argo lint --help

  test_argo_cli_only:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: read

    name: Install Argo CLI only and test presence in path
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install Argo Workflows
        uses: ./setup-argo-workflows
        with:
          install-argo-cli-only: 'true'

      - name: Check install!
        run: argo lint --help
